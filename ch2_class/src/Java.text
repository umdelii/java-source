자바 : 객체지향언어
학생(등 개념(객체)이라는 자체를) 클래스로 만들어 냄(정의)
학생의 이름, 나이, 신장 등을 변수로 지정(obj)

클래스 : 객체를 정의해 놓은 것, 객체 생성하는 데 사용 / (설계도:ex間取り図)
객체 : 실제로 존재하는 것(개념) / (제품:ex物)

인스턴스화 : 클래스로부터 객체를 만드는 과정
인스턴스 : 어떠한 클래스로부터 만들어진 객체

객체 : 속성(멤버변수,특성,필드,상태)
       기능(메소드,함수,행동,동작)

Student(라는 객체를 정의)
- 속성 : 이름, 학번, 전화번호, 주소, 생년월일 등 => 변수
- 기능 : 주소 변경, 생년월일 수정 등 => method
    속성과 기능은 필수요소는 아님
    
메소드()안에 들어가는 것들
       기본타입, 참조타입 - [], 클래스(String이나 내가 만든 클래스)

오버로딩
1.생성자 오버로딩 : 하나의 클래스 안에 복수의 동일한 생성자(괄호안의 타입이 같은)가 존재함
2. 메소드 오버로딩 : 하나의 클래스 안에 복수의 동일한 이름(괄호안의 타입이 같은)의 메소드가 존재

상속불가 = 생성자, 초기화 블럭

오버라이딩 - 상속에서 뜸
       : 자식 클래스에서 부모 클래스 메소드를 재정의

관계 
       1. 상속관계(is-a관계) : extends 클래스
       2. 포함관계(has-a관계) : 한 클래스를 작성하는데 다른 클래스의 멤버변수를 가져다 와 선언
       ex. 원(Circle)은 점(Point)이다 or 원(Circle)은 점(Point)를 가지고 있다 ---> "가지고 있다"가 맞기 때문에 포함관계로 설정
       ex2. Car, SportsCar 
              SportsCar는 Car이다 (O)
              SportsCar는 Car를 가지고 있다 (X)  
              = 상속관계로 만들자
       ex3. 도형 : Shape / 점 : Point
              삼각형 : Triangle 만들고 싶어~
              Triangle은 Shape이다 -> 상속관계
              Triangle은 Point를 가지고 있다 -> 포함관계
              원 : Circle 만들고 싶어~
              Circle은 Shape이다 -> 상속관계
              Circle은 Point를 가지고 있다 -> 포함관계

private : 캡슐화(은닉), 다른 클래스에서 접근못함

package == 폴더 == 클래스 여러개 묶음
import 패키지명.클래스명;
package -> import -> class
